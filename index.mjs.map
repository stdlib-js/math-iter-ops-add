{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which performs element-wise addition of two or more iterators.\n*\n* ## Notes\n*\n* -   If provided a numeric value as an iterator argument, the value is broadcast as an **infinite** iterator which **always** returns the provided value.\n* -   If an iterated value is non-numeric (including `NaN`), the returned iterator returns `NaN`. If non-numeric iterated values are possible, you are advised to provide an iterator which type checks and handles non-numeric values accordingly.\n* -   The length of the returned iterator is equal to the length of the shortest provided iterator. In other words, the returned iterator ends once **one** of the provided iterators ends.\n* -   If an environment supports `Symbol.iterator` and all provided iterators are iterable, the returned iterator is iterable.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...(Iterator|number)} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterAdd( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterAdd() {\n\tvar iterators;\n\tvar types;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( format('0Zf0I') );\n\t}\n\titerators = [];\n\ttypes = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\titerators.push( arguments[ i ] );\n\t\tif ( isIteratorLike( arguments[ i ] ) ) {\n\t\t\ttypes.push( 1 );\n\t\t} else if ( isNumber( arguments[ i ] ) ) {\n\t\t\ttypes.push( 0 );\n\t\t} else {\n\t\t\tthrow new TypeError( format( '0Zf4P', i, arguments[ i ] ) );\n\t\t}\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] && !isFunction( iterators[ i ][ iteratorSymbol ] ) ) { // eslint-disable-line max-len\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar s;\n\t\tvar v;\n\t\tvar i;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] ) {\n\t\t\t\tv = iterators[ i ].next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tif ( typeof v.value === 'number' ) {\n\t\t\t\t\ts += v.value;\n\t\t\t\t} else {\n\t\t\t\t\ts = NaN;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ts += iterators[ i ];\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': s,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] ) {\n\t\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t\t} else {\n\t\t\t\targs.push( iterators[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn iterAdd.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterAdd;\n"],"names":["iterAdd","iterators","types","niter","iter","FLG","i","arguments","length","Error","format","push","isIteratorLike","isNumber","TypeError","setReadOnly","s","v","done","next","value","NaN","iteratorSymbol","isFunction","args","apply"],"mappings":";;4lBAiEA,SAASA,IACR,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,IADAH,EAAQI,UAAUC,QACL,EACZ,MAAM,IAAIC,MAAOC,EAAO,UAIzB,IAFAT,EAAY,GACZC,EAAQ,GACFI,EAAI,EAAGA,EAAIH,EAAOG,IAEvB,GADAL,EAAUU,KAAMJ,UAAWD,IACtBM,EAAgBL,UAAWD,IAC/BJ,EAAMS,KAAM,OACN,KAAKE,EAAUN,UAAWD,IAGhC,MAAM,IAAIQ,UAAWJ,EAAQ,QAASJ,EAAGC,UAAWD,KAFpDJ,EAAMS,KAAM,EAGZ,CAQF,GAJAI,EADAX,EAAO,CAAA,EACY,QAyBnB,WACC,IAAIY,EACAC,EACAX,EACJ,GAAKD,EACJ,MAAO,CACNa,MAAQ,GAIV,IADAF,EAAI,EACEV,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAKJ,EAAOI,GAAM,CAEjB,IADAW,EAAIhB,EAAWK,GAAIa,QACZD,KAEN,OADAb,GAAM,EACCY,EAEgB,iBAAZA,EAAEG,MACbJ,GAAKC,EAAEG,MAEPJ,EAAIK,GAET,MACIL,GAAKf,EAAWK,GAGlB,MAAO,CACNc,MAASJ,EACTE,MAAQ,EAET,IAtDDH,EAAaX,EAAM,UA+DnB,SAAcgB,GAEb,GADAf,GAAM,EACDE,UAAUC,OACd,MAAO,CACNY,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IAvEII,EAAiB,CACrB,IAAMhB,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAKJ,EAAOI,KAAQiB,EAAYtB,EAAWK,GAAKgB,IAAqB,CACpEjB,GAAM,EACN,KACA,CAEIA,GACLU,EAAaX,EAAMkB,GAuErB,WACC,IAAIE,EACAlB,EAGJ,IADAkB,EAAO,GACDlB,EAAI,EAAGA,EAAIH,EAAOG,IAClBJ,EAAOI,GACXkB,EAAKb,KAAMV,EAAWK,GAAKgB,MAE3BE,EAAKb,KAAMV,EAAWK,IAGxB,OAAON,EAAQyB,MAAO,KAAMD,EAC5B,GAlFA,CAGD,OAFAnB,GAAM,EACNC,EAAI,EACGF,CAgFR"}