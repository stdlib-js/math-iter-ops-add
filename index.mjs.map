{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which performs element-wise addition of two or more iterators.\n*\n* ## Notes\n*\n* -   If provided a numeric value as an iterator argument, the value is broadcast as an **infinite** iterator which **always** returns the provided value.\n* -   If an iterated value is non-numeric (including `NaN`), the returned iterator returns `NaN`. If non-numeric iterated values are possible, you are advised to provide an iterator which type checks and handles non-numeric values accordingly.\n* -   The length of the returned iterator is equal to the length of the shortest provided iterator. In other words, the returned iterator ends once **one** of the provided iterators ends.\n* -   If an environment supports `Symbol.iterator` and all provided iterators are iterable, the returned iterator is iterable.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...(Iterator|number)} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterAdd( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterAdd() {\n\tvar iterators;\n\tvar types;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\ttypes = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\titerators.push( arguments[ i ] );\n\t\tif ( isIteratorLike( arguments[ i ] ) ) {\n\t\t\ttypes.push( 1 );\n\t\t} else if ( isNumber( arguments[ i ] ) ) {\n\t\t\ttypes.push( 0 );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object or a number. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] && !isFunction( iterators[ i ][ iteratorSymbol ] ) ) { // eslint-disable-line max-len\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar s;\n\t\tvar v;\n\t\tvar i;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] ) {\n\t\t\t\tv = iterators[ i ].next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tif ( typeof v.value === 'number' ) {\n\t\t\t\t\ts += v.value;\n\t\t\t\t} else {\n\t\t\t\t\ts = NaN;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ts += iterators[ i ];\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': s,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( types[ i ] ) {\n\t\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t\t} else {\n\t\t\t\targs.push( iterators[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn iterAdd.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which performs element-wise addition of two or more iterators.\n*\n* @module @stdlib/math-iter-ops-add\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterAdd = require( '@stdlib/math-iter-ops-add' );\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterAdd( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterAdd = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterAdd;\n"],"names":["setReadOnly","require$$0","isFunction","require$$1","isNumber","require$$2","isPrimitive","isIteratorLike","require$$3","iteratorSymbol","require$$4","format","require$$5","main","iterAdd","iterators","types","niter","iter","FLG","i","arguments","length","Error","push","TypeError","next","end","factory","s","v","done","value","NaN","args","apply","lib"],"mappings":";;0hBAsBA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAWC,EAAsCC,YACjDC,EAAiBC,EACjBC,EAAiBC,EACjBC,EAASC,EAsKb,IAAAC,EAhIA,SAASC,IACR,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,IADAH,EAAQI,UAAUC,QACL,EACZ,MAAM,IAAIC,MAAO,qEAIlB,IAFAR,EAAY,GACZC,EAAQ,GACFI,EAAI,EAAGA,EAAIH,EAAOG,IAEvB,GADAL,EAAUS,KAAMH,UAAWD,IACtBb,EAAgBc,UAAWD,IAC/BJ,EAAMQ,KAAM,OACN,CAAA,IAAKpB,EAAUiB,UAAWD,IAGhC,MAAM,IAAIK,UAAWd,EAAQ,iHAAkHS,EAAGC,UAAWD,KAF7JJ,EAAMQ,KAAM,GAWd,GAJAxB,EADAkB,EAAO,GACY,OAAQQ,GAC3B1B,EAAakB,EAAM,SAAUS,GAGxBlB,EAAiB,CACrB,IAAMW,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAKJ,EAAOI,KAAQlB,EAAYa,EAAWK,GAAKX,IAAqB,CACpEU,GAAM,EACN,MAGIA,GACLnB,EAAakB,EAAMT,EAAgBmB,GAKrC,OAFAT,GAAM,EACNC,EAAI,EACGF,EAQP,SAASQ,IACR,IAAIG,EACAC,EACAV,EACJ,GAAKD,EACJ,MAAO,CACNY,MAAQ,GAIV,IADAF,EAAI,EACET,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAKJ,EAAOI,GAAM,CAEjB,IADAU,EAAIf,EAAWK,GAAIM,QACZK,KAEN,OADAZ,GAAM,EACCW,EAEgB,iBAAZA,EAAEE,MACbH,GAAKC,EAAEE,MAEPH,EAAII,SAGLJ,GAAKd,EAAWK,GAGlB,MAAO,CACNY,MAASH,EACTE,MAAQ,GAWV,SAASJ,EAAKK,GAEb,OADAb,GAAM,EACDE,UAAUC,OACP,CACNU,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASH,IACR,IAAIM,EACAd,EAGJ,IADAc,EAAO,GACDd,EAAI,EAAGA,EAAIH,EAAOG,IAClBJ,EAAOI,GACXc,EAAKV,KAAMT,EAAWK,GAAKX,MAE3ByB,EAAKV,KAAMT,EAAWK,IAGxB,OAAON,EAAQqB,MAAO,KAAMD,KCvI9BE,EALcnC"}